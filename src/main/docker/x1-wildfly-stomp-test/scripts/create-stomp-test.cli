embed-server --admin-only --server-config=profile.xml --std-out=echo

if (outcome != success) of /subsystem=microprofile-config-smallrye/config-source=stomp-test:read-resource
  /subsystem=microprofile-config-smallrye/config-source=stomp-test:add(dir={path="/srv/wildfly/configuration/application"}, ordinal=200)
end-if

if (outcome != success) of /subsystem=datasources/data-source=stocksDS:read-resource
  /subsystem=datasources/data-source=stocksDS:add( \
    jndi-name=java:jboss/datasources/stocksDS, \
    connection-url=jdbc:postgresql://${env.DB_SERVER:postgresql}:${env.DB_PORT:5432}/stocks,\
    user-name=${env.DB_USER:stocks}, \
    password=${env.DB_PASSWORD:stocks}, \
    statistics-enabled=true,\
    min-pool-size=2,\
    max-pool-size=5,\
    driver-name=postgresql,\
    driver-class=org.postgresql.Driver,\
    validate-on-match=true,\
    check-valid-connection-sql="select current_timestamp",\
    statistics-enabled=true\
    )
end-if

if (outcome != success) of /subsystem=messaging-activemq/server=default/jms-queue=stocksQueue:read-resource
  /subsystem=messaging-activemq/server=default/jms-queue=stocksQueue:add(\
    durable=true,\
    entries=[java:/jms/queue/stocks],\
    )
end-if

if (outcome != success) of /subsystem=messaging-activemq/server=default/jms-topic=quotesTopic:read-resource
  /subsystem=messaging-activemq/server=default/jms-topic=quotesTopic:add(\
    entries=[java:/jms/topic/quotes],\
    )
end-if

if (outcome == success) of /system-property=net.logstash.logging.formatter.LogstashUtilFormatter.tags:read-resource
	/system-property=net.logstash.logging.formatter.LogstashUtilFormatter.tags:remove()
end-if
/system-property=net.logstash.logging.formatter.LogstashUtilFormatter.tags:add(value="stomp-test")

if (outcome == success) of /system-property=x1.service.registry.etcd:read-resource
  /system-property=x1.service.registry.etcd:remove()
end-if
/system-property=x1.service.registry.etcd:add(value="http://${env.ETCD_SERVER:etcd.x1}:${env.ETCD_PORT:4001}")

if (outcome == success) of /system-property=x1.service.registry.stage:read-resource
  /system-property=x1.service.registry.stage:remove()
end-if
/system-property=x1.service.registry.stage:add(value="kubernetes")

if (outcome != success) of /subsystem=microprofile-opentracing-smallrye/jaeger-tracer=jaeger-operator:read-resource
  /subsystem=microprofile-opentracing-smallrye/jaeger-tracer=jaeger-operator:add(\
    sampler-type=probabilistic,\
    sampler-param=0.1,\
    tags={{service=stomp-test,deployment=wildfly}},\
    sender-endpoint="http://jaeger-all-in-one-collector.observability:14268/api/traces")
end-if

/subsystem=microprofile-opentracing-smallrye:write-attribute(name=default-tracer, value=jaeger-operator)
